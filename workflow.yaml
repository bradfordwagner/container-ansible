apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ansible-image-
spec:
  podGC:
    strategy: OnPodSuccess # delete pods when workflow is successful
  entrypoint: main
  arguments:
    parameters:
      - name: git_ref_type
        value: branches
      - name: git_version
  templates:
  - name: main
    inputs:
      parameters:
      - name: git_version
      - name: git_ref_type
      - name: upstream_repo
        value: quay.io/bradfordwagner/base
      - name: upstream_tag
        value: 2.3.1
      - name: repo_name
        value: quay.io/bradfordwagner/ansible
    dag:
      tasks:
      - name: custom-dockerfile
        arguments:
          parameters:
          - name: git_repo
            value: https://github.com/bradfordwagner/container-ansible
          - name: git_version
            value: "{{ inputs.parameters.git_version }}"
          - name: upstream_repo
            value: "{{ inputs.parameters.upstream_repo }}"
          - name: upstream_tag
            value: "{{ inputs.parameters.upstream_tag }}-{{ item.platform }}"
          - name: tag_suffix # forms git_version-platform
            value: "-{{ item.platform }}"
          - name: repo_name
            value: "{{ inputs.parameters.repo_name }}"
          - name: runtime_platforms
            value: "{{ item.runtime_platforms }}"
          - name: platform
            value: "{{ item.platform }}"
          - name: dockerfile
            value: |
              ENV LANG C.UTF-8
              ENV LC_ALL C.UTF-8
              ENV ANSIBLE_OS {{ item.os }}
              ENV HOME /root
              WORKDIR ${HOME}
              COPY . .
              RUN . ./ansible-install-lib; install_{{ item.os }} {{ item.os_version }}
              COPY ./ansible-destroy     /usr/local/bin
              RUN rm -rf * # cleanup
        templateRef:
          name: flavor-custom-dockerfile-template
          template: "{{ inputs.parameters.git_ref_type }}"
        withItems:
        - { os: alpine , platform: alpine_3.16     , os_version: 3.16     , runtime_platforms: [linux/amd64 , linux/arm64] }
        - { os: alpine , platform: alpine_3.17     , os_version: 3.17     , runtime_platforms: [linux/amd64 , linux/arm64] }
        - { os: ubuntu , platform: ubuntu_focal    , os_version: focal    , runtime_platforms: [linux/amd64 , linux/arm64] }
        - { os: ubuntu , platform: ubuntu_kinetic  , os_version: kinetic  , runtime_platforms: [linux/amd64 , linux/arm64] }
        - { os: ubuntu , platform: ubuntu_lunar    , os_version: lunar    , runtime_platforms: [linux/amd64 , linux/arm64] }
        - { os: debian , platform: debian_bullseye , os_version: bullseye , runtime_platforms: [linux/amd64 , linux/arm64] }
        - { os: debian , platform: debian_bookworm , os_version: bookworm , runtime_platforms: [linux/amd64 , linux/arm64] }
        - { os: arch , platform: arch , os_version: arch , runtime_platforms: [linux/amd64 , linux/arm64] }

